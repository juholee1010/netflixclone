{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juhol\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios'; //const base_url = \"http://image.tmdb.org/t/p/original/\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  title,\n  fetchUrl\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]); // A snippet of code which runs based on a specific condition\n\n  useEffect(() => {\n    // if [], run once when the row loads, and dont run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      console.log(request);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.poster_path,\n      alt: movie.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/juhol/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","Row","title","fetchUrl","movies","setMovies","fetchData","request","get","data","results","console","log","map","movie","poster_path","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;;;AAEA,SAASC,GAAT,CAAa;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAb,EAAkC;AAAA;;AAC9B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC,CAD8B,CAG9B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,mBAAeO,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUL,QAAV,CAAtB;AACAE,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,aAAOA,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GATQ,EASN,CAACH,QAAD,CATM,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAGK;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHL,EAKME,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACb;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,WAAhB;AAA6B,MAAA,GAAG,EAAED,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,YADH,CALN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA1BQf,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from './axios';\r\n\r\n//const base_url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl }) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    // A snippet of code which runs based on a specific condition\r\n    useEffect(() => {\r\n        // if [], run once when the row loads, and dont run again\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            console.log(request);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n             <div className=\"row__posters\"></div>\r\n\r\n             {movies.map(movie =>(\r\n                 <img src={movie.poster_path} alt={movie.name}/>\r\n             ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}